DROP TABLE IF EXISTS AUTHORITIES;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS LOG;

--USER TABLE
CREATE TABLE IF NOT EXISTS USER (
    IDUSER INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD  VARCHAR(255) NOT NULL,
    IDROLE INT  NOT NULL,
    CONSTRAINT FK_ROLE_USER FOREIGN KEY(IDROLE) REFERENCES USER(IDROLE));
);

--AUTHORITIES ROLE
CREATE TABLE IF NOT EXISTS ROLE(
      IDROLE  INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY,
      NAMEROLE VARCHAR(255) NOT NULL;

;

-- --LOG TABLE
-- CREATE TABLE IF NOT EXISTS LOG (
-- 	IDLOG INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
--     LOGSTRING VARCHAR(1000) NULL,
--     PRIMARY KEY (IDLOG)
-- );
--
-- --COURSES
-- CREATE TABLE IF NOT EXISTS COURSE (
--     ID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
--     CAPTION VARCHAR(255) NOT NULL,
--     DESCRIPTION  VARCHAR(255) NOT NULL,
--     PRIMARY KEY (ID)
-- );
--
-- --TEST TABLE
-- CREATE TABLE IF NOT EXISTS TEST (
-- 	IDTEST INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL,
--     TESTCOLUMN VARCHAR(1000) NULL,
--     PRIMARY KEY (IDTEST)
-- );



